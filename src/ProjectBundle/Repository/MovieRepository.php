<?php

namespace ProjectBundle\Repository;
use Symfony\Component\Intl\Locale;

/**
 * MovieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MovieRepository extends \Doctrine\ORM\EntityRepository
{
    private $qb;

	public function findAllData($arr_query_data=false, $locale=false)
    {
		$locale = ($locale) ? $locale : Locale::getDefault();
  		$this->qb = $this->createQueryBuilder('m');

		//join translation
		$this->qb->join('m.translations', 'mt')
				->select('m', 'mt')
				->orderBy('m.position', 'ASC')
				->addOrderBy('m.createdAt', 'DESC');


  		if(isset($arr_query_data['q']) && $arr_query_data['q']){
			//search from translation
  			$this->qb->where($this->qb->expr()->orX(
	  	      	$this->qb->expr()->like('mt.title', ':query')
	  			// $this->qb->expr()->like('evt.description', ':query')
			))
  			->setParameter('query', '%'.$arr_query_data['q'].'%');
  		}

		// if(isset($arr_query_data['eventCategory']) && $arr_query_data['eventCategory']){
		// 	$this->qb->andWhere('ec.id = :event_category_id')
		// 		->setParameter('event_category_id', $arr_query_data['eventCategory']);
		// }

  		return $this->qb;
    }

	public function setPublic()
    {
        $this->qb->andWhere('NOW() >= m.publicDate')
                ->andWhere('m.status = 1');
    }

	public function findAllActiveData($arr_query_data=false, $locale=false)
    {
		$this->findAllData($arr_query_data, $locale);
		$this->setPublic();
		return $this->qb;
	}

}
